{"version":3,"file":"eventHandlers.min.js","sources":["../src/eventHandlers.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * This module defines the event handlers to be added to the listeners in eventListners.\n *\n * @module     tool_wsformat/eventHandlers\n * @copyright  2023 Djarran Cotleanu, Zach Pregl\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\nimport * as Toast from 'core/toast';\n\n// Select needed elements for event handlers.\nconst detailContainerElement = document.querySelector('#ws-panel');\nconst detailPlaceholderText = document.querySelector('#placeholder-text');\nconst detailTitleElement = document.getElementById('ws-title');\nconst detailDescriptionElement = document.getElementById('ws-description');\nconst detailRequestElement = document.getElementById('ws-curl');\nconst exportButtonElement = document.getElementById('export-button-id');\n\n/**\n * The select change handler. Changed the type parameter of the export button's href.\n * Valid export type relates to the different formats that can be exported to.\n *\n * @param {HTMLSelectEvent} event Properties and methods for select element event\n */\nexport const exportSelectChangeHandler = (event) => {\n    const url = exportButtonElement.href;\n    let urlObj = new URL(url);\n\n    const exportType = event.target.value;\n    if (exportType === 'curl') {\n        urlObj.searchParams.set('export-type', 'curl');\n    } else {\n        urlObj.searchParams.set('export-type', 'postman');\n    }\n\n    exportButtonElement.href = urlObj.href;\n};\n\n/**\n * Adds click handlers to each webservice list item.\n *\n * Removes the \"Please select webservice\" placeholder element.\n *\n * Assign values to placeholder title, description, and curl string elements\n * to the respective webservice selected.\n *\n * @param {Element} webservice\n */\nexport const webserviceItemClickHandler = (webservice) => {\n    webservice.addEventListener('click', (e) => {\n        e.preventDefault();\n\n        const name = webservice.getAttribute('data-name');\n        const description = webservice.getAttribute('data-desc');\n        const curlString = webservice.getAttribute('data-curl');\n\n        if (detailPlaceholderText) {\n            detailPlaceholderText.remove();\n        }\n\n        detailContainerElement.style.display = 'flex';\n\n        detailTitleElement.innerHTML = name;\n        detailDescriptionElement.innerHTML = description;\n        detailRequestElement.innerHTML = curlString;\n\n        document.getElementById('details-curl-button').addEventListener('click', (e) => {\n            e.preventDefault();\n            detailRequestElement.innerHTML = curlString;\n        });\n\n        document.getElementById('details-postman-button').addEventListener('click', (e) => {\n            e.preventDefault();\n            const postman = webservice.getAttribute('data-postman');\n            detailRequestElement.innerHTML = postman;\n        });\n    });\n};\n\n/**\n * Copies the cURL string of the selected webservice to the user's clipboard.\n *\n * Adds toast element upon successful copy.\n */\nexport const copyRequestClickHandler = () => {\n    const requestString = document.getElementById('ws-curl').innerText;\n\n    // Source: https://developer.mozilla.org/en-US/docs/Web/API/Clipboard/writeText#examples.\n    navigator.clipboard.writeText(requestString)\n        .then(() => {\n            // From the official Moodle Component Library:\n            // https://componentlibrary.moodle.com/admin/tool/componentlibrary/docspage.php/moodle/javascript/toast/\n            Toast.add('cURL successfully copied to clipboard', {\n                type: 'success'\n            });\n        })\n        .catch(() => {\n            Toast.add('cURL unable to be copied to clipboard', {\n                type: 'danger'\n            });\n        });\n};\n\n/**\n * Reloads the page, clearing the selection of webservices.\n */\nexport const clearButtonClickHandler = () => {\n    const currentUrl = window.location.href;\n    window.location.href = currentUrl;\n};\n"],"names":["detailContainerElement","document","querySelector","detailPlaceholderText","detailTitleElement","getElementById","detailDescriptionElement","detailRequestElement","exportButtonElement","event","url","href","urlObj","URL","target","value","searchParams","set","webservice","addEventListener","e","preventDefault","name","getAttribute","description","curlString","remove","style","display","innerHTML","postman","requestString","innerText","navigator","clipboard","writeText","then","Toast","add","type","catch","currentUrl","window","location"],"mappings":";;;;;;;mBAyBMA,uBAAyBC,SAASC,cAAc,aAChDC,sBAAwBF,SAASC,cAAc,qBAC/CE,mBAAqBH,SAASI,eAAe,YAC7CC,yBAA2BL,SAASI,eAAe,kBACnDE,qBAAuBN,SAASI,eAAe,WAC/CG,oBAAsBP,SAASI,eAAe,uDAQVI,cAChCC,IAAMF,oBAAoBG,SAC5BC,OAAS,IAAIC,IAAIH,KAGF,SADAD,MAAMK,OAAOC,MAE5BH,OAAOI,aAAaC,IAAI,cAAe,QAEvCL,OAAOI,aAAaC,IAAI,cAAe,WAG3CT,oBAAoBG,KAAOC,OAAOD,0CAaKO,aACvCA,WAAWC,iBAAiB,SAAUC,IAClCA,EAAEC,uBAEIC,KAAOJ,WAAWK,aAAa,aAC/BC,YAAcN,WAAWK,aAAa,aACtCE,WAAaP,WAAWK,aAAa,aAEvCpB,uBACAA,sBAAsBuB,SAG1B1B,uBAAuB2B,MAAMC,QAAU,OAEvCxB,mBAAmByB,UAAYP,KAC/BhB,yBAAyBuB,UAAYL,YACrCjB,qBAAqBsB,UAAYJ,WAEjCxB,SAASI,eAAe,uBAAuBc,iBAAiB,SAAUC,IACtEA,EAAEC,iBACFd,qBAAqBsB,UAAYJ,cAGrCxB,SAASI,eAAe,0BAA0Bc,iBAAiB,SAAUC,IACzEA,EAAEC,uBACIS,QAAUZ,WAAWK,aAAa,gBACxChB,qBAAqBsB,UAAYC,gDAUN,WAC7BC,cAAgB9B,SAASI,eAAe,WAAW2B,UAGzDC,UAAUC,UAAUC,UAAUJ,eACzBK,MAAK,KAGFC,MAAMC,IAAI,wCAAyC,CAC/CC,KAAM,eAGbC,OAAM,KACHH,MAAMC,IAAI,wCAAyC,CAC/CC,KAAM,gDAQiB,WAC7BE,WAAaC,OAAOC,SAAShC,KACnC+B,OAAOC,SAAShC,KAAO8B"}