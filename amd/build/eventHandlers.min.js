define("tool_wsformat/eventHandlers",["exports","core/toast"],(function(_exports,Toast){function _getRequireWildcardCache(nodeInterop){if("function"!=typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop)}Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.webserviceItemClickHandler=_exports.exportSelectChangeHandler=_exports.copyRequestClickHandler=_exports.clearButtonClickHandler=void 0,Toast=function(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;if(null===obj||"object"!=typeof obj&&"function"!=typeof obj)return{default:obj};var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj))return cache.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj)if("default"!==key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}newObj.default=obj,cache&&cache.set(obj,newObj);return newObj}
/**
   * This module defines the event handlers to be added to the listeners in eventListners.
   *
   * @module     tool_wsformat/eventHandlers
   * @copyright  2023 Djarran Cotleanu, Zach Pregl
   * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   */(Toast);const detailContainerElement=document.querySelector("#ws-panel"),detailPlaceholderText=document.querySelector("#placeholder-text"),detailTitleElement=document.getElementById("ws-title"),detailDescriptionElement=document.getElementById("ws-description"),detailRequestElement=document.getElementById("ws-curl"),exportButtonElement=document.getElementById("export-button-id");_exports.exportSelectChangeHandler=event=>{const url=exportButtonElement.href;let urlObj=new URL(url);"curl"===event.target.value?urlObj.searchParams.set("export-type","curl"):urlObj.searchParams.set("export-type","postman"),exportButtonElement.href=urlObj.href};_exports.webserviceItemClickHandler=webservice=>{webservice.addEventListener("click",(e=>{e.preventDefault();const name=webservice.getAttribute("data-name"),description=webservice.getAttribute("data-desc"),curlString=webservice.getAttribute("data-curl");detailPlaceholderText&&detailPlaceholderText.remove(),detailContainerElement.style.display="flex",detailTitleElement.innerHTML=name,detailDescriptionElement.innerHTML=description,detailRequestElement.innerHTML=curlString,document.getElementById("details-curl-button").addEventListener("click",(e=>{e.preventDefault(),detailRequestElement.innerHTML=curlString})),document.getElementById("details-postman-button").addEventListener("click",(e=>{e.preventDefault();const postman=webservice.getAttribute("data-postman");detailRequestElement.innerHTML=postman}))}))};_exports.copyRequestClickHandler=()=>{const requestString=document.getElementById("ws-curl").innerText;navigator.clipboard.writeText(requestString).then((()=>{Toast.add("cURL successfully copied to clipboard",{type:"success"})})).catch((()=>{Toast.add("cURL unable to be copied to clipboard",{type:"danger"})}))};_exports.clearButtonClickHandler=()=>{const currentUrl=window.location.href;window.location.href=currentUrl}}));

//# sourceMappingURL=eventHandlers.min.js.map